{"version":3,"sources":["views/app-views/main/setting/EditProfile.js"],"names":["EditProfile","state","avatarUrl","id","this","props","match","params","fetchClient","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","isLoading","justifyContent","alignItems","mobileFlex","className","size","src","icon","onChange","info","key","file","status","getBase64","originFileObj","imageUrl","setState","message","success","content","duration","loading","showUploadList","action","avatarEndpoint","type","onClick","name","layout","initialValues","user","email","username","phone","website","address","street","city","zipcode","onFinish","values","setTimeout","history","push","onFinishFailed","errorInfo","console","log","xs","sm","md","lg","gutter","ROW_GUTTER","Item","label","rules","required","htmlType","Component","connect","clients","client"],"mappings":"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","file":"static/js/18.a5b6f610.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Avatar, Button, Col, Form, Input, message, Row, Spin, Upload} from 'antd';\r\nimport {UserOutlined} from '@ant-design/icons';\r\nimport {ROW_GUTTER} from 'constants/ThemeConstant';\r\nimport Flex from 'components/shared-components/Flex'\r\nimport {fetchClient} from \"../../../../redux/reducers/Clients\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport class EditProfile extends Component {\r\n\r\n  componentDidMount() {\r\n    const id = this.props.match.params.id\r\n    this.props.fetchClient(id)\r\n  }\r\n\r\n  state= {\r\n  \tavatarUrl: '/img/avatars/thumb-6.jpg',\r\n  }\r\n\r\n  getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n  }\r\n\r\n  render() {\r\n    const onFinish = values => {\r\n      const key = 'updatable';\r\n      message.loading({content: 'Updating...', key});\r\n      setTimeout(() => {\r\n        this.props.history.push('/app/main/client-list')\r\n        message.success({content: 'Done!', key, duration: 2});\r\n      }, 1000);\r\n    };\r\n\r\n    const onFinishFailed = errorInfo => {\r\n      console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const onUploadAavater = info => {\r\n      const key = 'updatable';\r\n      if (info.file.status === 'uploading') {\r\n        message.loading({content: 'Uploading...', key, duration: 1000});\r\n        return;\r\n      }\r\n      if (info.file.status === 'done') {\r\n        this.getBase64(info.file.originFileObj, imageUrl =>\r\n          this.setState({\r\n            avatarUrl: imageUrl,\r\n          }),\r\n        );\r\n        message.success({content: 'Uploaded!', key, duration: 1.5});\r\n      }\r\n    };\r\n\r\n    const onRemoveAvater = () => {\r\n      this.setState({\r\n        avatarUrl: ''\r\n      })\r\n    }\r\n\r\n    const {avatarUrl} = this.state;\r\n\r\n    return (\r\n      <>\r\n        {this.props.isLoading\r\n          ? <Flex justifyContent=\"center\" alignItems=\"center\">\r\n            <Spin/>\r\n          </Flex>\r\n          : <>\r\n            <Flex alignItems=\"center\" mobileFlex={false} className=\"text-center text-md-left\">\r\n              <Avatar size={90} src={avatarUrl} icon={<UserOutlined/>}/>\r\n              <div className=\"ml-md-3 mt-md-0 mt-3\">\r\n                <Upload onChange={onUploadAavater} showUploadList={false} action={this.avatarEndpoint}>\r\n                  <Button type=\"primary\">Change Avatar</Button>\r\n                </Upload>\r\n                <Button className=\"ml-2\" onClick={onRemoveAvater}>Remove</Button>\r\n              </div>\r\n            </Flex>\r\n            <div className=\"mt-4\">\r\n              <Form\r\n                name=\"basicInformation\"\r\n                layout=\"vertical\"\r\n                initialValues={\r\n                  {\r\n                    'name': this.props.user?.name,\r\n                    'email': this.props.user?.email,\r\n                    'username': this.props.user?.username,\r\n                    'phoneNumber': this.props.user?.phone,\r\n                    'website': this.props.user?.website,\r\n                    'address': this.props.user?.address.street,\r\n                    'city': this.props.user?.address.city,\r\n                    'postcode': this.props.user?.address.zipcode\r\n                  }\r\n                }\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n              >\r\n                <Row>\r\n                  <Col xs={24} sm={24} md={24} lg={16}>\r\n                    <Row gutter={ROW_GUTTER}>\r\n                      <Col xs={24} sm={24} md={12}>\r\n                        <Form.Item\r\n                          label=\"Name\"\r\n                          name=\"name\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Please input your name!',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input/>\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={24} md={12}>\r\n                        <Form.Item\r\n                          label=\"Username\"\r\n                          name=\"username\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Please input your username!'\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input/>\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={24} md={12}>\r\n                        <Form.Item\r\n                          label=\"Email\"\r\n                          name=\"email\"\r\n                          rules={[{\r\n                            required: true,\r\n                            type: 'email',\r\n                            message: 'Please enter a valid email!'\r\n                          }]}\r\n                        >\r\n                          <Input/>\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={24} md={12}>\r\n                        <Form.Item\r\n                          label=\"Phone Number\"\r\n                          name=\"phoneNumber\"\r\n                        >\r\n                          <Input/>\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={24} md={12}>\r\n                        <Form.Item\r\n                          label=\"Website\"\r\n                          name=\"website\"\r\n                        >\r\n                          <Input/>\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={24} md={24}>\r\n                        <Form.Item\r\n                          label=\"Address\"\r\n                          name=\"address\"\r\n                        >\r\n                          <Input/>\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={24} md={12}>\r\n                        <Form.Item\r\n                          label=\"City\"\r\n                          name=\"city\"\r\n                        >\r\n                          <Input/>\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={24} md={12}>\r\n                        <Form.Item\r\n                          label=\"Post code\"\r\n                          name=\"postcode\"\r\n                        >\r\n                          <Input/>\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                      Save Change\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </div>\r\n          </>\r\n        }\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.clients.client,\r\n  isLoading: state.clients.isLoading\r\n})\r\n\r\nexport default connect(mapStateToProps, {fetchClient})(EditProfile)\r\n"],"sourceRoot":""}